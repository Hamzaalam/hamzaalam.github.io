{"version":3,"sources":["header/header.jsx","Home/Icon.jsx","Home/Home.jsx","Resume/Resume.jsx","Projects/Project.jsx","Blog/Blog.jsx","Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","React","useState","value","setValue","className","Tabs","indicatorColor","textColor","onChange","event","newValue","aria-label","Tab","label","component","Link","to","Icon","props","iconColor","setIconColor","changeIconColor","type","ListItemText","onMouseEnter","onMouseLeave","icon","color","Home","style","borderRadius","width","display","margin","src","process","alt","Typography","variant","justifyContent","padding","List","flexDirection","href","target","faTwitter","faGithub","faFacebookSquare","faStackOverflow","faHackerrank","Resume","project","Blog","Main","exact","path","Project","font","createMuiTheme","fontFamily","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4770dc67.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport red from '@material-ui/core/colors/red';\nimport { Link } from 'react-router-dom';\n\n\nimport './header.css';\n\n\n\nconst Header = () => {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    return (<div className='header'>\n                    <Tabs\n                        className=\"nav-bar-tabs\"\n                        value={value}\n                        indicatorColor=\"primary\"\n                        //TabIndicatorProps={{textColor:'inherit'}}\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                        aria-label=\"disabled tabs example\"\n                     >\n                        <Tab\n                            className=\"nav-bar-tabs\"\n                            label=\"Me\"\n                            component={Link}\n                            to=\"/\" \n                        />\n                        <Tab                   \n                            className=\"nav-bar-tabs\"\n                            label=\"Resume\"\n                            component={Link}\n                            to='/Resume' \n                        />\n                        <Tab\n                            className=\"nav-bar-tabs\" \n                            label=\"Projects\" \n                            component={Link}\n                            to='/Projects'\n                        />\n                        <Tab \n                            className=\"nav-bar-tabs\" \n                            label=\"Blog\" \n                            component={Link}\n                            to='/blog'\n                        />\n                    </Tabs>\n            </div> );\n}\n \nexport default Header","import React from 'react';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './icon.css'\nconst Icon = (props) => {\n    const [iconColor, setIconColor] = React.useState(\"#545b67\");    \n    \n    const changeIconColor = (type) =>{\n        if(type==='onMouseEnter') setIconColor('aliceblue');\n        if(type==='onMouseLeave') setIconColor('#545b67');\n \n    }\n    return (\n       \n        <ListItemText \n            onMouseEnter={()=>changeIconColor('onMouseEnter')} \n            onMouseLeave={()=>changeIconColor('onMouseLeave')}\n        >\n            {<FontAwesomeIcon icon={props.icon} className=\"icon\" color={iconColor}/>}\n        </ListItemText>\n        );\n}\n \nexport default Icon;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItemLink from '@material-ui/core/Link';\nimport { faFacebookSquare, faHackerrank , faGithub , faTwitter , faStackOverflow} from '@fortawesome/free-brands-svg-icons'\nimport Icon from './Icon'\n\nconst Home = () => {\n    const flexContainer = {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: 24,\n    };\n    const profileHeading = {\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '20px 0 0 0'\n    }\n    const profileImage = {\n        borderRadius: '100%',\n        width: 190,\n        display: 'flex',\n        margin: '0 auto',\n    }\n    return (<div className=\"home\">\n        <img\n            style={profileImage}\n            src={process.env.PUBLIC_URL + '/small.png'}\n            alt=\"Hamza-Alam-profile-image\"\n        />\n        <Typography variant=\"h4\" style={profileHeading} className=\"heading\">\n            Hello, Iâ€™m Hamza Alam!\n                </Typography>\n\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\" style={flexContainer}>\n            <ListItemLink href=\"https://twitter.com/syedhamza100\" target=\"_blank\">\n                <Icon icon={faTwitter}/>\n            </ListItemLink>\n            <ListItemLink href=\"https://github.com/Hamzaalam\" target=\"_blank\">\n                <Icon icon={faGithub}/>\n            </ListItemLink>\n            <ListItemLink href=\"https://www.facebook.com/syed.hamza.100\" target=\"_blank\">\n                <Icon icon={faFacebookSquare}/>\n            </ListItemLink>\n            <ListItemLink href=\"https://stackoverflow.com/users/8237983/hamza-alam\" target=\"_blank\">\n                <Icon icon={faStackOverflow}/>\n            </ListItemLink>\n            <ListItemLink href=\"https://www.hackerrank.com/hamzaalam\" target=\"_blank\">\n                <Icon icon={faHackerrank}/>\n            </ListItemLink>\n        </List>\n\n    </div>);\n}\n\nexport default Home;","import React from 'react';\n\nconst Resume = () => {\n    return (<div><h2>Resume Coming Soon!</h2></div>  );\n}\n \nexport default Resume;","import React from 'react';\nconst project = () => {\n    return ( <div><h2>Pojects Coming Soon!</h2></div> );\n}\n \nexport default project;","import React from 'react';\n\nconst Blog = () => {\n    return ( <div><h2>Blog Coming Soon!</h2></div> );\n}\n \nexport default Blog;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from '../Home/Home'\nimport Resume from '../Resume/Resume'\nimport Project from '../Projects/Project'\nimport Blog from \"../Blog/Blog\";\n\nconst Main = () => {\n    return (<div>\n            <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route path='/resume' component={Resume}/>\n              <Route path='/projects' component={Project}/>\n              <Route path='/blog' component={Blog}/>\n            </Switch>   \n    </div>);\n}\n \nexport default Main;","import React from 'react';\nimport Header from './header/header'\nimport Main from './Main/Main'\nimport './App.css';\nimport { MuiThemeProvider, createMuiTheme , darken} from '@material-ui/core/styles'\n\n\nconst font = \"'Open Sans', sans-serif\"; \nconst muiTheme = createMuiTheme({\n  fontFamily: font,\n}\n);\n\nfunction App(props) {\n  return (\n      <React.Fragment>\n        {/* <MuiThemeProvider > */}\n          <div style={{fontFamily: font}} className=\"container\">\n            <Header/>\n            <div className=\"App\">\n              <header className=\"App-header\">\n                <Main/>  \n              </header>\n            </div>\n          </div>\n        {/* </MuiThemeProvider> */}\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport { Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n// import { createBrowserHistory } from \"history\";\n\n// const history = createBrowserHistory();\n\nReactDOM.render(\n                <HashRouter basename='/'>\n                    <App  />  \n                </HashRouter>,\n                document.getElementById('root')\n                );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}